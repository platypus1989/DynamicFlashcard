import { useState } from "react";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Alert, AlertDescription } from "@/components/ui/alert";
import { Upload, CheckCircle2, AlertCircle } from "lucide-react";
import { CurriculumStorage } from "@/lib/curriculumStorage";
import type { Curriculum } from "@shared/schema";

interface ImportCurriculaDialogProps {
  isOpen: boolean;
  onClose: () => void;
  onImportComplete: (count: number) => void;
}

export default function ImportCurriculaDialog({
  isOpen,
  onClose,
  onImportComplete,
}: ImportCurriculaDialogProps) {
  const [importing, setImporting] = useState(false);
  const [result, setResult] = useState<{
    success: boolean;
    message: string;
    count?: number;
  } | null>(null);

  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const files = event.target.files;
    if (!files || files.length === 0) return;

    setImporting(true);
    setResult(null);

    try {
      let successCount = 0;
      let errorCount = 0;
      const errors: string[] = [];

      for (const file of Array.from(files)) {
        try {
          const text = await file.text();
          const data = JSON.parse(text);

          // Validate structure
          if (!data.name || !Array.isArray(data.flashcards)) {
            throw new Error(`Invalid curriculum format in ${file.name}`);
          }

          // Check if curriculum with same name already exists
          const existing = CurriculumStorage.loadCurricula().find(
            c => c.name.toLowerCase() === data.name.toLowerCase()
          );

          if (existing) {
            errors.push(`"${data.name}" already exists - skipped`);
            errorCount++;
            continue;
          }

          // Add curriculum
          CurriculumStorage.addCurriculum({
            name: data.name,
            flashcards: data.flashcards,
          });

          successCount++;
        } catch (error) {
          errorCount++;
          errors.push(`${file.name}: ${error instanceof Error ? error.message : 'Unknown error'}`);
        }
      }

      const message = `
        Successfully imported: ${successCount} curricula
        ${errorCount > 0 ? `Failed/Skipped: ${errorCount}` : ''}
        ${errors.length > 0 ? `\n\nDetails:\n${errors.join('\n')}` : ''}
      `.trim();

      setResult({
        success: successCount > 0,
        message,
        count: successCount,
      });

      if (successCount > 0) {
        setTimeout(() => {
          onImportComplete(successCount);
          handleClose();
        }, 2000);
      }
    } catch (error) {
      setResult({
        success: false,
        message: `Import failed: ${error instanceof Error ? error.message : 'Unknown error'}`,
      });
    } finally {
      setImporting(false);
      // Reset file input
      event.target.value = '';
    }
  };

  const handleClose = () => {
    setResult(null);
    onClose();
  };

  return (
    <Dialog open={isOpen} onOpenChange={handleClose}>
      <DialogContent className="sm:max-w-[500px]">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <Upload className="h-5 w-5" />
            Import Curricula
          </DialogTitle>
          <DialogDescription>
            Import curriculum JSON files generated by the batch script.
            You can select multiple files at once.
          </DialogDescription>
        </DialogHeader>

        <div className="space-y-4 py-4">
          {/* File Input */}
          <div className="flex flex-col gap-4">
            <div className="border-2 border-dashed border-muted rounded-lg p-8 text-center hover:border-primary/50 transition-colors">
              <Upload className="h-12 w-12 mx-auto mb-4 text-muted-foreground" />
              <label htmlFor="file-upload" className="cursor-pointer">
                <div className="text-sm text-muted-foreground mb-2">
                  Click to select curriculum files
                </div>
                <Button asChild variant="outline" disabled={importing}>
                  <span>Choose Files</span>
                </Button>
                <input
                  id="file-upload"
                  type="file"
                  accept=".json"
                  multiple
                  className="hidden"
                  onChange={handleFileSelect}
                  disabled={importing}
                />
              </label>
              <p className="text-xs text-muted-foreground mt-2">
                Select one or more JSON files from the curricula_data folder
              </p>
            </div>
          </div>

          {/* Status */}
          {importing && (
            <Alert>
              <AlertDescription>
                Importing curricula...
              </AlertDescription>
            </Alert>
          )}

          {result && (
            <Alert variant={result.success ? "default" : "destructive"}>
              {result.success ? (
                <CheckCircle2 className="h-4 w-4" />
              ) : (
                <AlertCircle className="h-4 w-4" />
              )}
              <AlertDescription className="whitespace-pre-wrap">
                {result.message}
              </AlertDescription>
            </Alert>
          )}

          {/* Instructions */}
          <div className="text-sm text-muted-foreground space-y-2">
            <p className="font-semibold">Instructions:</p>
            <ol className="list-decimal list-inside space-y-1 ml-2">
              <li>Run the batch script to generate curriculum files</li>
              <li>Find the JSON files in the <code className="bg-muted px-1 rounded">curricula_data/</code> folder</li>
              <li>Select one or more files to import</li>
              <li>Existing curricula with the same name will be skipped</li>
            </ol>
          </div>
        </div>

        <div className="flex justify-end gap-2">
          <Button variant="ghost" onClick={handleClose} disabled={importing}>
            Close
          </Button>
        </div>
      </DialogContent>
    </Dialog>
  );
}

